[{"C:\\cat-forum\\frontend\\src\\index.js":"1","C:\\cat-forum\\frontend\\src\\App.js":"2","C:\\cat-forum\\frontend\\src\\contexts\\SubjectContextProvider.js":"3","C:\\cat-forum\\frontend\\src\\components\\ReplyList.js":"4","C:\\cat-forum\\frontend\\src\\pages\\Home.js":"5","C:\\cat-forum\\frontend\\src\\components\\Header.js":"6","C:\\cat-forum\\frontend\\src\\components\\ThreadList.js":"7","C:\\cat-forum\\frontend\\src\\contexts\\UserContextProvider.js":"8","C:\\cat-forum\\frontend\\src\\components\\ReplyItem.js":"9","C:\\cat-forum\\frontend\\src\\components\\SubjectList.js":"10","C:\\cat-forum\\frontend\\src\\components\\ThreadItem.js":"11","C:\\cat-forum\\frontend\\src\\components\\CreateNewThreadModal.js":"12","C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\AuthenticationModal.js":"13","C:\\cat-forum\\frontend\\src\\components\\SubjectItem.js":"14","C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\LoginModal.js":"15","C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\RegisterModal.js":"16","C:\\cat-forum\\frontend\\src\\components\\UserInformationModal.js":"17","C:\\cat-forum\\frontend\\src\\components\\ModeratorButtonStyle.js":"18"},{"size":209,"mtime":1608300270953,"results":"19","hashOfConfig":"20"},{"size":1015,"mtime":1609353527385,"results":"21","hashOfConfig":"20"},{"size":779,"mtime":1608316020731,"results":"22","hashOfConfig":"20"},{"size":3507,"mtime":1609762949264,"results":"23","hashOfConfig":"20"},{"size":195,"mtime":1608300270954,"results":"24","hashOfConfig":"20"},{"size":2832,"mtime":1609765299813,"results":"25","hashOfConfig":"20"},{"size":1372,"mtime":1609146530539,"results":"26","hashOfConfig":"20"},{"size":813,"mtime":1609142784165,"results":"27","hashOfConfig":"20"},{"size":1856,"mtime":1609763649682,"results":"28","hashOfConfig":"20"},{"size":516,"mtime":1608304650881,"results":"29","hashOfConfig":"20"},{"size":843,"mtime":1609761436764,"results":"30","hashOfConfig":"20"},{"size":2667,"mtime":1609146542544,"results":"31","hashOfConfig":"20"},{"size":1028,"mtime":1609142784159,"results":"32","hashOfConfig":"20"},{"size":832,"mtime":1609711127786,"results":"33","hashOfConfig":"20"},{"size":3255,"mtime":1609766374740,"results":"34","hashOfConfig":"20"},{"size":3963,"mtime":1609240595854,"results":"35","hashOfConfig":"20"},{"size":5079,"mtime":1609747732556,"results":"36","hashOfConfig":"20"},{"size":714,"mtime":1609710821620,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"w4ozw0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\cat-forum\\frontend\\src\\index.js",[],["80","81"],"C:\\cat-forum\\frontend\\src\\App.js",[],"C:\\cat-forum\\frontend\\src\\contexts\\SubjectContextProvider.js",["82","83"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nexport const SubjectContext = createContext();\r\n\r\nconst SubjectContextProvider = (props) => {\r\nconst [chosenSubject, setChosenSubject] = useState('')\r\nconst [chosenThread, setChosenThread] = useState('');\r\nconst [subjects, setSubjects] = useState('')\r\n\r\nconst fetchSubjects = async () => {\r\n  let result = await fetch(\"/rest/subjects\");\r\n  result = await result.json();\r\n  setSubjects(result);\r\n};\r\n\r\n  const values = {\r\n    subjects,\r\n    chosenSubject,\r\n    setChosenSubject,\r\n    fetchSubjects,\r\n    chosenThread,\r\n    setChosenThread\r\n  };\r\n\r\n  return (\r\n    <SubjectContext.Provider value={values}>{props.children}</SubjectContext.Provider>\r\n  );\r\n};\r\nexport default SubjectContextProvider;\r\n","C:\\cat-forum\\frontend\\src\\components\\ReplyList.js",["84","85","86","87","88"],"C:\\cat-forum\\frontend\\src\\pages\\Home.js",[],"C:\\cat-forum\\frontend\\src\\components\\Header.js",["89","90","91"],"C:\\cat-forum\\frontend\\src\\components\\ThreadList.js",["92"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport {\r\n Button\r\n} from 'reactstrap';\r\nimport { SubjectContext } from '../contexts/SubjectContextProvider'\r\nimport {UserContext} from '../contexts/UserContextProvider'\r\nimport ThreadItem from './ThreadItem'\r\nimport CreateNewThreadModal from './CreateNewThreadModal'\r\n\r\nconst ThreadList = () =>{\r\n  const { chosenSubject } = useContext(SubjectContext);\r\n  const {user} = useContext(UserContext)\r\n  const [threads, setThreads] = useState(null);\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const fetchThreads = async () =>{\r\n    let result = await fetch('/rest/threads/' + chosenSubject.id)\r\n    result = await result.json();\r\n    console.log(result);\r\n    setThreads(result);\r\n  }\r\n\r\n  useEffect(() => {\r\n   fetchThreads()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <div>\r\n          <Button onClick={toggle}>Create new thread</Button>\r\n          <CreateNewThreadModal\r\n            toggle={toggle}\r\n            modal={modal}\r\n            setModal={setModal}\r\n            fetchThreads={fetchThreads}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {threads &&\r\n        threads.map((thread, i) => {\r\n          return <ThreadItem thread={thread} key={i} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\nexport default ThreadList;","C:\\cat-forum\\frontend\\src\\contexts\\UserContextProvider.js",[],"C:\\cat-forum\\frontend\\src\\components\\ReplyItem.js",[],"C:\\cat-forum\\frontend\\src\\components\\SubjectList.js",["93","94"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport SubjectItem from './SubjectItem'\r\nimport { SubjectContext} from '../contexts/SubjectContextProvider'\r\n\r\nconst SubjectList = () => {\r\n  const { fetchSubjects, subjects } = useContext(SubjectContext)\r\n\r\n  useEffect(() => {\r\n    fetchSubjects();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {subjects && subjects.map((subject, i) => {\r\n       return <SubjectItem subject={subject} key={i}/> \r\n      })}\r\n    </div>\r\n  )\r\n}\r\nexport default SubjectList;","C:\\cat-forum\\frontend\\src\\components\\ThreadItem.js",[],"C:\\cat-forum\\frontend\\src\\components\\CreateNewThreadModal.js",["95","96"],"import React, { useState, useContext } from \"react\";\r\nimport { Button, Modal, ModalBody, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport {SubjectContext} from '../contexts/SubjectContextProvider'\r\nimport {UserContext} from '../contexts/UserContextProvider'\r\nconst CreateNewThreadModal = (props) => {\r\n  const [threadTitle, setThreadTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const { chosenSubject, chosenThread } = useContext(SubjectContext)\r\n  const { user } = useContext(UserContext)\r\n\r\n  const createThread = async (e) => {\r\n    e.preventDefault()\r\n\r\n    let threadInformation = {\r\n      title: threadTitle,\r\n      creator: user.username\r\n    }\r\n\r\n   let replyInformation = {\r\n      message: message,\r\n      sender: user.username\r\n    }\r\n\r\n   let thread = await fetch(\"/rest/threads/\" + chosenSubject.id, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(threadInformation),\r\n   });\r\n    \r\n    thread = await thread.json();\r\n\r\n    console.log(thread);\r\n    console.log(thread.lastInsertRowid);\r\n\r\n     let reply = await fetch(\"/rest/replies/\" + thread.lastInsertRowid, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(replyInformation),\r\n   });\r\n   props.toggle()\r\n   props.fetchThreads()\r\n }\r\n  return (\r\n    <div className=\"row mx-auto\">\r\n      <Modal isOpen={props.modal} toggle={props.toggle} >\r\n      <h2 className=\"text-center mt-4 tradeHub-orange font-weight-bold col-12\">\r\n        Create new thread\r\n      </h2>\r\n      <ModalBody className=\"\">\r\n        <Form onSubmit={createThread}>\r\n          <FormGroup>\r\n            <Label\r\n              for=\"threadTitle\"\r\n            >\r\n              Title\r\n            </Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              value={threadTitle}\r\n              onChange={(e) => setThreadTitle(e.target.value)}\r\n            />\r\n            </FormGroup>\r\n             <FormGroup>\r\n            <Label\r\n              for=\"threadTitle\"\r\n            >\r\n              Message\r\n            </Label>\r\n            <Input\r\n              required\r\n              type=\"textarea\"\r\n              placeholder=\"Message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Button>\r\n                Create thread\r\n              </Button>\r\n            </FormGroup>\r\n        </Form>\r\n      </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateNewThreadModal;\r\n","C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\AuthenticationModal.js",[],"C:\\cat-forum\\frontend\\src\\components\\SubjectItem.js",[],"C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\LoginModal.js",["97"],"C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\RegisterModal.js",[],"C:\\cat-forum\\frontend\\src\\components\\UserInformationModal.js",["98","99","100","101","102","103","104","105"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport {UserContext} from '../contexts/UserContextProvider'\r\nimport ModeratorButtonStyle from './ModeratorButtonStyle'\r\n\r\nconst UserInformationModal = (props) => {\r\n  const [clickedUser, setClickedUser] = useState('')\r\n  const [moderatedThreads, setModeratedThreads] = useState('')\r\n  const { user } = useContext(UserContext);\r\n  const [showAddModeratorInformation, setShowAddModeratorInformation] = useState(false);\r\n  const [showRemoveModeratorInformation, setShowRemoveModeratorInformation] = useState(false);\r\n  const [unModeratedThreads, setUnModeratedThreads] = useState('');\r\n\r\n  const fetchUserByUsername = async () =>{\r\n    if(showRemoveModeratorInformation){\r\n      setShowRemoveModeratorInformation(false)\r\n    }\r\n    let result = await fetch('/rest/' + props.username);\r\n    result = await result.json();\r\n    setClickedUser(result)\r\n\r\n      getModeratorInformation(result)\r\n    \r\n  }\r\n\r\n  const getModeratorInformation = async (user) => {\r\nlet result = await fetch('/rest/moderator/' + user.id)\r\nresult = await result.json()\r\nsetModeratedThreads(result)\r\nconsole.log(result);\r\n\r\n  }\r\n\r\n  const getAllThreads = async () =>{\r\n    let result = await fetch('/rest/threads')\r\n    result = await result.json()\r\n\r\n for (let i = 0; i < moderatedThreads.length; i++) {\r\n   for (let j = 0; j < result.length; j++) {\r\n     if(result[j].id === moderatedThreads[i].id){\r\n       result.splice(j, 1)\r\n     }\r\n   }\r\n }\r\n    setUnModeratedThreads(result);\r\n\r\n  }\r\n\r\n  const removeAsModeratorFor= async (thread) =>{\r\n    let result = await fetch(\r\n      \"/rest/removeModerator/\" + clickedUser.id + \"/\" + thread.id\r\n    );\r\n    result = await result.json()\r\n   fetchUserByUsername()\r\n  }\r\n\r\n  const addAsModerator = async (thread) =>{\r\n    console.log('in function');\r\n let result = await fetch(\r\n   \"/rest/addModerator/\" + clickedUser.id + \"/\" + thread.id\r\n );\r\nfetchUserByUsername();\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUserByUsername()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(moderatedThreads != null && moderatedThreads !== undefined && moderatedThreads !== ''){\r\n      getAllThreads();\r\n\r\n    }\r\n  }, [moderatedThreads])\r\n\r\n  return (\r\n    <div className=\"row mx-auto\">\r\n      <Modal isOpen={props.modal} toggle={props.toggle}>\r\n        <h2 className=\"text-center mt-4 tradeHub-orange font-weight-bold col-12\">\r\n          {clickedUser ? clickedUser.username : \"Nothing here\"}{\" \"}\r\n        </h2>\r\n        <ModalBody className=\"\">\r\n          {clickedUser ? (\r\n            <div>\r\n              {moderatedThreads &&\r\n                moderatedThreads.map((x) => (\r\n                  <ModeratorButtonStyle thread={x} title={\"MODERATOR\"} />\r\n                ))}\r\n            </div>\r\n          ) : (\r\n          ''\r\n          )}\r\n          {user && user.userRole === \"admin\" ? (\r\n            clickedUser && clickedUser.userRole === \"moderator\" ? (\r\n              <div>\r\n                <Button\r\n                  onClick={() =>\r\n                    setShowRemoveModeratorInformation(\r\n                      !showRemoveModeratorInformation\r\n                    )\r\n                  }\r\n                >\r\n                  Remove as moderator\r\n                </Button>{\" \"}\r\n                <Button\r\n                  onClick={() =>\r\n                    setShowAddModeratorInformation(!showAddModeratorInformation)\r\n                  }\r\n                >\r\n                  Add as moderator\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <Button\r\n                onClick={() =>\r\n                  setShowAddModeratorInformation(!showAddModeratorInformation)\r\n                }\r\n              >\r\n                Add as moderator\r\n              </Button>\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {showRemoveModeratorInformation ? (\r\n            <div>\r\n              <h6>\r\n                Click on the thread to remove {clickedUser.username} as a\r\n                moderator\r\n              </h6>\r\n\r\n              {moderatedThreads &&\r\n                moderatedThreads.map((x) => (\r\n                  <div onClick={() => removeAsModeratorFor(x)}>\r\n                    <ModeratorButtonStyle thread={x} title={\"REMOVE\"} />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {showAddModeratorInformation ? (\r\n            <div>\r\n              <h6>\r\n                Click on the thread to add {clickedUser.username} as a moderator\r\n              </h6>\r\n              {unModeratedThreads &&\r\n                unModeratedThreads.map((x) => (\r\n                  <div onClick={() => addAsModerator(x)}>\r\n                    <ModeratorButtonStyle thread={x} title={'ADD'} />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default UserInformationModal","C:\\cat-forum\\frontend\\src\\components\\ModeratorButtonStyle.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":32,"nodeType":"112","messageId":"113","endLine":1,"endColumn":42},{"ruleId":"110","severity":1,"message":"114","line":1,"column":44,"nodeType":"112","messageId":"113","endLine":1,"endColumn":53},{"ruleId":"110","severity":1,"message":"115","line":42,"column":7,"nodeType":"112","messageId":"113","endLine":42,"endColumn":12},{"ruleId":"116","severity":1,"message":"117","line":55,"column":24,"nodeType":"118","messageId":"119","endLine":55,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":74,"column":6,"nodeType":"122","endLine":74,"endColumn":8,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":109,"column":28,"nodeType":"126","messageId":"127","endLine":109,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":109,"column":57,"nodeType":"126","messageId":"127","endLine":109,"endColumn":59},{"ruleId":"110","severity":1,"message":"128","line":15,"column":7,"nodeType":"112","messageId":"113","endLine":15,"endColumn":14},{"ruleId":"110","severity":1,"message":"129","line":33,"column":12,"nodeType":"112","messageId":"113","endLine":33,"endColumn":22},{"ruleId":"110","severity":1,"message":"130","line":39,"column":12,"nodeType":"112","messageId":"113","endLine":39,"endColumn":15},{"ruleId":"120","severity":1,"message":"131","line":27,"column":6,"nodeType":"122","endLine":27,"endColumn":8,"suggestions":"132"},{"ruleId":"110","severity":1,"message":"133","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"134","line":10,"column":6,"nodeType":"122","endLine":10,"endColumn":8,"suggestions":"135"},{"ruleId":"110","severity":1,"message":"136","line":8,"column":26,"nodeType":"112","messageId":"113","endLine":8,"endColumn":38},{"ruleId":"110","severity":1,"message":"115","line":35,"column":10,"nodeType":"112","messageId":"113","endLine":35,"endColumn":15},{"ruleId":"110","severity":1,"message":"137","line":9,"column":11,"nodeType":"112","messageId":"113","endLine":9,"endColumn":18},{"ruleId":"110","severity":1,"message":"138","line":6,"column":3,"nodeType":"112","messageId":"113","endLine":6,"endColumn":7},{"ruleId":"110","severity":1,"message":"139","line":7,"column":3,"nodeType":"112","messageId":"113","endLine":7,"endColumn":12},{"ruleId":"110","severity":1,"message":"140","line":8,"column":3,"nodeType":"112","messageId":"113","endLine":8,"endColumn":8},{"ruleId":"110","severity":1,"message":"141","line":9,"column":3,"nodeType":"112","messageId":"113","endLine":9,"endColumn":8},{"ruleId":"110","severity":1,"message":"142","line":61,"column":20,"nodeType":"112","messageId":"113","endLine":61,"endColumn":26},{"ruleId":"110","severity":1,"message":"142","line":67,"column":6,"nodeType":"112","messageId":"113","endLine":67,"endColumn":12},{"ruleId":"120","severity":1,"message":"143","line":76,"column":6,"nodeType":"122","endLine":76,"endColumn":8,"suggestions":"144"},{"ruleId":"120","severity":1,"message":"145","line":83,"column":6,"nodeType":"122","endLine":83,"endColumn":24,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'reply' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchReplies', 'isLoggedInUserModeratorForThread', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["149"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'catLogo' is assigned a value but never used.","'goToMyPage' is assigned a value but never used.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchThreads'. Either include it or remove the dependency array.",["150"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchSubjects'. Either include it or remove the dependency array.",["151"],"'chosenThread' is assigned a value but never used.","'setUser' is assigned a value but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserByUsername'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'getAllThreads'. Either include it or remove the dependency array.",["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [fetchReplies, isLoggedInUserModeratorForThread, user]",{"range":"164","text":"165"},"Update the dependencies array to be: [fetchThreads]",{"range":"166","text":"167"},"Update the dependencies array to be: [fetchSubjects]",{"range":"168","text":"169"},"Update the dependencies array to be: [fetchUserByUsername]",{"range":"170","text":"171"},"Update the dependencies array to be: [getAllThreads, moderatedThreads]",{"range":"172","text":"173"},[1860,1862],"[fetchReplies, isLoggedInUserModeratorForThread, user]",[844,846],"[fetchThreads]",[320,322],"[fetchSubjects]",[2117,2119],"[fetchUserByUsername]",[2279,2297],"[getAllThreads, moderatedThreads]"]