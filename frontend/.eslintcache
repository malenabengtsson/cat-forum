[{"C:\\cat-forum\\frontend\\src\\index.js":"1","C:\\cat-forum\\frontend\\src\\App.js":"2","C:\\cat-forum\\frontend\\src\\contexts\\SubjectContextProvider.js":"3","C:\\cat-forum\\frontend\\src\\components\\ReplyList.js":"4","C:\\cat-forum\\frontend\\src\\pages\\Home.js":"5","C:\\cat-forum\\frontend\\src\\components\\Header.js":"6","C:\\cat-forum\\frontend\\src\\components\\ThreadList.js":"7","C:\\cat-forum\\frontend\\src\\contexts\\UserContextProvider.js":"8","C:\\cat-forum\\frontend\\src\\components\\ReplyItem.js":"9","C:\\cat-forum\\frontend\\src\\components\\SubjectList.js":"10","C:\\cat-forum\\frontend\\src\\components\\ThreadItem.js":"11","C:\\cat-forum\\frontend\\src\\components\\CreateNewThreadModal.js":"12","C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\AuthenticationModal.js":"13","C:\\cat-forum\\frontend\\src\\components\\SubjectItem.js":"14","C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\LoginModal.js":"15","C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\RegisterModal.js":"16","C:\\cat-forum\\frontend\\src\\components\\UserInformationModal.js":"17","C:\\cat-forum\\frontend\\src\\components\\ModeratorButtonStyle.js":"18"},{"size":209,"mtime":1608300270953,"results":"19","hashOfConfig":"20"},{"size":1015,"mtime":1609353527385,"results":"21","hashOfConfig":"20"},{"size":779,"mtime":1608316020731,"results":"22","hashOfConfig":"20"},{"size":3876,"mtime":1609853541914,"results":"23","hashOfConfig":"20"},{"size":195,"mtime":1608300270954,"results":"24","hashOfConfig":"20"},{"size":2711,"mtime":1610022341791,"results":"25","hashOfConfig":"20"},{"size":1504,"mtime":1610021871747,"results":"26","hashOfConfig":"20"},{"size":813,"mtime":1609142784165,"results":"27","hashOfConfig":"20"},{"size":2979,"mtime":1609871253568,"results":"28","hashOfConfig":"20"},{"size":516,"mtime":1608304650881,"results":"29","hashOfConfig":"20"},{"size":864,"mtime":1610012188181,"results":"30","hashOfConfig":"20"},{"size":2704,"mtime":1610022835740,"results":"31","hashOfConfig":"20"},{"size":1047,"mtime":1610022072080,"results":"32","hashOfConfig":"20"},{"size":827,"mtime":1610012193329,"results":"33","hashOfConfig":"20"},{"size":3177,"mtime":1610022713174,"results":"34","hashOfConfig":"20"},{"size":3853,"mtime":1610022224842,"results":"35","hashOfConfig":"20"},{"size":5873,"mtime":1610021775575,"results":"36","hashOfConfig":"20"},{"size":714,"mtime":1609710821620,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"w4ozw0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\cat-forum\\frontend\\src\\index.js",[],["78","79"],"C:\\cat-forum\\frontend\\src\\App.js",[],"C:\\cat-forum\\frontend\\src\\contexts\\SubjectContextProvider.js",["80","81"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nexport const SubjectContext = createContext();\r\n\r\nconst SubjectContextProvider = (props) => {\r\nconst [chosenSubject, setChosenSubject] = useState('')\r\nconst [chosenThread, setChosenThread] = useState('');\r\nconst [subjects, setSubjects] = useState('')\r\n\r\nconst fetchSubjects = async () => {\r\n  let result = await fetch(\"/rest/subjects\");\r\n  result = await result.json();\r\n  setSubjects(result);\r\n};\r\n\r\n  const values = {\r\n    subjects,\r\n    chosenSubject,\r\n    setChosenSubject,\r\n    fetchSubjects,\r\n    chosenThread,\r\n    setChosenThread\r\n  };\r\n\r\n  return (\r\n    <SubjectContext.Provider value={values}>{props.children}</SubjectContext.Provider>\r\n  );\r\n};\r\nexport default SubjectContextProvider;\r\n","C:\\cat-forum\\frontend\\src\\components\\ReplyList.js",["82","83","84","85","86"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardFooter,\r\n} from \"reactstrap\";\r\nimport {SubjectContext} from '../contexts/SubjectContextProvider'\r\nimport {UserContext} from '../contexts/UserContextProvider'\r\nimport ReplyItem from './ReplyItem'\r\n\r\nconst ReplyList = () =>{\r\n  const [replies, setReplies] = useState(null)\r\n  const [newReply, setNewReply] = useState('')\r\n  const [threadIsLocked, setThreadIsLocked] = useState(false);\r\n  const [warningReply, setWarningReply] = useState(false)\r\n  const {chosenThread} = useContext(SubjectContext);\r\n  const {user} = useContext(UserContext);\r\n  const [isModerator, setIsModerator] = useState('')\r\n\r\n  const fetchReplies = async () =>{\r\n    let result = await fetch('/rest/replies/' + chosenThread.id)\r\n    result = await result.json();\r\n    setReplies(result)\r\n\r\n    if(chosenThread.locked === 1){\r\n      setThreadIsLocked(true)\r\n    }\r\n  }\r\n\r\n  const sendReply = async (e) =>{\r\ne.preventDefault()\r\n let replyInformation = {\r\n   message: newReply,\r\n   sender: user.username,\r\n   warning: warningReply ? 1 : 0\r\n };\r\n               \r\n  let reply = await fetch(\"/rest/replies/\" + chosenThread.id, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(replyInformation),\r\n  });\r\n  setNewReply('')\r\n  fetchReplies()\r\n  }\r\n\r\n  const isLoggedInUserModeratorForThread = async () =>{\r\nlet result = await fetch(\"/rest/moderator/\" + user.id);\r\nresult = await result.json();\r\n\r\nresult.map((thread, i) => {\r\n  if(thread.id === chosenThread.id){\r\n    setIsModerator(true)\r\n  }\r\n})\r\n}\r\n\r\nconst lockThread = async () => {\r\n  console.log('In lock');\r\n  await fetch('/rest//lockThread/' + chosenThread.id)\r\n  setThreadIsLocked(true);\r\n}\r\n\r\nconst toggleWarningReply = () => {\r\nsetWarningReply(!warningReply)\r\nconsole.log(warningReply);\r\n}\r\n\r\n  useEffect(() => {\r\n  fetchReplies()\r\n if(user != null){\r\n    isLoggedInUserModeratorForThread()\r\n  }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h2>{chosenThread.title}</h2>\r\n      {replies &&\r\n        replies.map((reply, i) => {\r\n          return (\r\n            <ReplyItem\r\n              reply={reply}\r\n              key={i}\r\n              isModerator={isModerator}\r\n              fetchReplies={fetchReplies}\r\n              warningReply={warningReply} />\r\n          );\r\n        })}\r\n      {user ? (\r\n        chosenThread && threadIsLocked === false ? (\r\n          <div className=\"m-4\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\">Write a reply</CardTitle>\r\n                <CardText>\r\n                  <Form onSubmit={sendReply}>\r\n                    <FormGroup>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        placeholder=\"Write your reply here...\"\r\n                        value={newReply}\r\n                        onChange={(e) => setNewReply(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                    <Button>Send reply</Button>\r\n                  </Form>\r\n                </CardText>\r\n              </CardBody>\r\n              {isModerator || user.userRole === 'admin' && threadIsLocked === false ? (\r\n                <CardFooter className=\"text-muted\">\r\n                  <p className=\"m-0 pointer\" onClick={() => lockThread()}>\r\n                    Lock thread\r\n                  </p>\r\n                  <Button onClick={() => toggleWarningReply() } active={warningReply}>Warning</Button>\r\n                </CardFooter>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Card>\r\n          </div>\r\n        ) : (\r\n          <Alert color=\"danger\">Thread has been locked</Alert>\r\n        )\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default ReplyList","C:\\cat-forum\\frontend\\src\\pages\\Home.js",[],"C:\\cat-forum\\frontend\\src\\components\\Header.js",["87","88"],"C:\\cat-forum\\frontend\\src\\components\\ThreadList.js",["89"],"C:\\cat-forum\\frontend\\src\\contexts\\UserContextProvider.js",[],"C:\\cat-forum\\frontend\\src\\components\\ReplyItem.js",[],"C:\\cat-forum\\frontend\\src\\components\\SubjectList.js",["90","91"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport SubjectItem from './SubjectItem'\r\nimport { SubjectContext} from '../contexts/SubjectContextProvider'\r\n\r\nconst SubjectList = () => {\r\n  const { fetchSubjects, subjects } = useContext(SubjectContext)\r\n\r\n  useEffect(() => {\r\n    fetchSubjects();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {subjects && subjects.map((subject, i) => {\r\n       return <SubjectItem subject={subject} key={i}/> \r\n      })}\r\n    </div>\r\n  )\r\n}\r\nexport default SubjectList;","C:\\cat-forum\\frontend\\src\\components\\ThreadItem.js",[],"C:\\cat-forum\\frontend\\src\\components\\CreateNewThreadModal.js",["92","93"],"C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\AuthenticationModal.js",[],"C:\\cat-forum\\frontend\\src\\components\\SubjectItem.js",[],"C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\LoginModal.js",["94"],"C:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\RegisterModal.js",[],"C:\\cat-forum\\frontend\\src\\components\\UserInformationModal.js",["95","96","97","98","99","100","101","102","103","104"],"C:\\cat-forum\\frontend\\src\\components\\ModeratorButtonStyle.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":32,"nodeType":"111","messageId":"112","endLine":1,"endColumn":42},{"ruleId":"109","severity":1,"message":"113","line":1,"column":44,"nodeType":"111","messageId":"112","endLine":1,"endColumn":53},{"ruleId":"109","severity":1,"message":"114","line":45,"column":7,"nodeType":"111","messageId":"112","endLine":45,"endColumn":12},{"ruleId":"115","severity":1,"message":"116","line":58,"column":24,"nodeType":"117","messageId":"118","endLine":58,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":81,"column":6,"nodeType":"121","endLine":81,"endColumn":8,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":117,"column":28,"nodeType":"125","messageId":"126","endLine":117,"endColumn":30},{"ruleId":"123","severity":1,"message":"124","line":117,"column":57,"nodeType":"125","messageId":"126","endLine":117,"endColumn":59},{"ruleId":"109","severity":1,"message":"127","line":30,"column":11,"nodeType":"111","messageId":"112","endLine":30,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":45,"column":11,"nodeType":"130","endLine":46,"endColumn":13},{"ruleId":"119","severity":1,"message":"131","line":27,"column":6,"nodeType":"121","endLine":27,"endColumn":8,"suggestions":"132"},{"ruleId":"109","severity":1,"message":"133","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"134","line":10,"column":6,"nodeType":"121","endLine":10,"endColumn":8,"suggestions":"135"},{"ruleId":"109","severity":1,"message":"136","line":8,"column":26,"nodeType":"111","messageId":"112","endLine":8,"endColumn":38},{"ruleId":"109","severity":1,"message":"114","line":35,"column":10,"nodeType":"111","messageId":"112","endLine":35,"endColumn":15},{"ruleId":"109","severity":1,"message":"137","line":9,"column":11,"nodeType":"111","messageId":"112","endLine":9,"endColumn":18},{"ruleId":"109","severity":1,"message":"138","line":6,"column":3,"nodeType":"111","messageId":"112","endLine":6,"endColumn":7},{"ruleId":"109","severity":1,"message":"139","line":7,"column":3,"nodeType":"111","messageId":"112","endLine":7,"endColumn":12},{"ruleId":"109","severity":1,"message":"140","line":8,"column":3,"nodeType":"111","messageId":"112","endLine":8,"endColumn":8},{"ruleId":"109","severity":1,"message":"141","line":9,"column":3,"nodeType":"111","messageId":"112","endLine":9,"endColumn":8},{"ruleId":"109","severity":1,"message":"142","line":10,"column":3,"nodeType":"111","messageId":"112","endLine":10,"endColumn":14},{"ruleId":"109","severity":1,"message":"143","line":68,"column":20,"nodeType":"111","messageId":"112","endLine":68,"endColumn":26},{"ruleId":"109","severity":1,"message":"143","line":74,"column":6,"nodeType":"111","messageId":"112","endLine":74,"endColumn":12},{"ruleId":"109","severity":1,"message":"143","line":83,"column":9,"nodeType":"111","messageId":"112","endLine":83,"endColumn":15},{"ruleId":"119","severity":1,"message":"144","line":89,"column":6,"nodeType":"121","endLine":89,"endColumn":8,"suggestions":"145"},{"ruleId":"119","severity":1,"message":"146","line":96,"column":6,"nodeType":"121","endLine":96,"endColumn":24,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'reply' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchReplies', 'isLoggedInUserModeratorForThread', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["150"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'goToHomePage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchThreads'. Either include it or remove the dependency array.",["151"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchSubjects'. Either include it or remove the dependency array.",["152"],"'chosenThread' is assigned a value but never used.","'setUser' is assigned a value but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'ModalFooter' is defined but never used.","'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserByUsername'. Either include it or remove the dependency array.",["153"],"React Hook useEffect has a missing dependency: 'getAllThreads'. Either include it or remove the dependency array.",["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [fetchReplies, isLoggedInUserModeratorForThread, user]",{"range":"165","text":"166"},"Update the dependencies array to be: [fetchThreads]",{"range":"167","text":"168"},"Update the dependencies array to be: [fetchSubjects]",{"range":"169","text":"170"},"Update the dependencies array to be: [fetchUserByUsername]",{"range":"171","text":"172"},"Update the dependencies array to be: [getAllThreads, moderatedThreads]",{"range":"173","text":"174"},[2061,2063],"[fetchReplies, isLoggedInUserModeratorForThread, user]",[844,846],"[fetchThreads]",[320,322],"[fetchSubjects]",[2406,2408],"[fetchUserByUsername]",[2568,2586],"[getAllThreads, moderatedThreads]"]