[{"D:\\cat-forum\\frontend\\src\\index.js":"1","D:\\cat-forum\\frontend\\src\\App.js":"2","D:\\cat-forum\\frontend\\src\\pages\\Home.js":"3","D:\\cat-forum\\frontend\\src\\contexts\\UserContextProvider.js":"4","D:\\cat-forum\\frontend\\src\\contexts\\SubjectContextProvider.js":"5","D:\\cat-forum\\frontend\\src\\components\\ReplyList.js":"6","D:\\cat-forum\\frontend\\src\\components\\Header.js":"7","D:\\cat-forum\\frontend\\src\\components\\ThreadList.js":"8","D:\\cat-forum\\frontend\\src\\components\\SubjectList.js":"9","D:\\cat-forum\\frontend\\src\\components\\ReplyItem.js":"10","D:\\cat-forum\\frontend\\src\\components\\ThreadItem.js":"11","D:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\AuthenticationModal.js":"12","D:\\cat-forum\\frontend\\src\\components\\SubjectItem.js":"13","D:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\LoginModal.js":"14","D:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\RegisterModal.js":"15","D:\\cat-forum\\frontend\\src\\components\\CreateNewThreadModal.js":"16"},{"size":209,"mtime":1608222734644,"results":"17","hashOfConfig":"18"},{"size":986,"mtime":1608986613930,"results":"19","hashOfConfig":"18"},{"size":195,"mtime":1608292584515,"results":"20","hashOfConfig":"18"},{"size":813,"mtime":1608991784676,"results":"21","hashOfConfig":"18"},{"size":779,"mtime":1608986613935,"results":"22","hashOfConfig":"18"},{"size":696,"mtime":1608986613933,"results":"23","hashOfConfig":"18"},{"size":2504,"mtime":1608993738073,"results":"24","hashOfConfig":"18"},{"size":1239,"mtime":1608993766951,"results":"25","hashOfConfig":"18"},{"size":516,"mtime":1608986613933,"results":"26","hashOfConfig":"18"},{"size":398,"mtime":1608986613933,"results":"27","hashOfConfig":"18"},{"size":834,"mtime":1608992095169,"results":"28","hashOfConfig":"18"},{"size":1028,"mtime":1608995127412,"results":"29","hashOfConfig":"18"},{"size":824,"mtime":1608992036874,"results":"30","hashOfConfig":"18"},{"size":3296,"mtime":1608991471259,"results":"31","hashOfConfig":"18"},{"size":3948,"mtime":1608990664020,"results":"32","hashOfConfig":"18"},{"size":2616,"mtime":1609066445007,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1u5ls9d",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\cat-forum\\frontend\\src\\index.js",[],["73","74"],"D:\\cat-forum\\frontend\\src\\App.js",[],"D:\\cat-forum\\frontend\\src\\pages\\Home.js",[],"D:\\cat-forum\\frontend\\src\\contexts\\UserContextProvider.js",[],"D:\\cat-forum\\frontend\\src\\contexts\\SubjectContextProvider.js",["75","76"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nexport const SubjectContext = createContext();\r\n\r\nconst SubjectContextProvider = (props) => {\r\nconst [chosenSubject, setChosenSubject] = useState('')\r\nconst [chosenThread, setChosenThread] = useState('');\r\nconst [subjects, setSubjects] = useState('')\r\n\r\nconst fetchSubjects = async () => {\r\n  let result = await fetch(\"/rest/subjects\");\r\n  result = await result.json();\r\n  setSubjects(result);\r\n};\r\n\r\n  const values = {\r\n    subjects,\r\n    chosenSubject,\r\n    setChosenSubject,\r\n    fetchSubjects,\r\n    chosenThread,\r\n    setChosenThread\r\n  };\r\n\r\n  return (\r\n    <SubjectContext.Provider value={values}>{props.children}</SubjectContext.Provider>\r\n  );\r\n};\r\nexport default SubjectContextProvider;\r\n","D:\\cat-forum\\frontend\\src\\components\\ReplyList.js",["77"],"import React, { useContext, useState, useEffect } from 'react'\r\n\r\nimport {SubjectContext} from '../contexts/SubjectContextProvider'\r\nimport ReplyItem from './ReplyItem'\r\n\r\nconst ReplyList = () =>{\r\n  const [replies, setReplies] = useState(null)\r\n  const {chosenThread} = useContext(SubjectContext);\r\n\r\n  const fetchReplies = async () =>{\r\n    let result = await fetch('/rest/replies/' + chosenThread.id)\r\n    result = await result.json();\r\n    setReplies(result)\r\n  }\r\n\r\n  useEffect(() => {\r\n  fetchReplies()\r\n  }, [])\r\n\r\n  return(\r\n    <div>\r\n      {replies && replies.map((reply, i) =>{\r\n        return <ReplyItem reply={reply} key={i}/>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\nexport default ReplyList","D:\\cat-forum\\frontend\\src\\components\\Header.js",["78"],"import React, {useState, useContext} from 'react'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {UserContext} from '../contexts/UserContextProvider'\r\nimport AuthenticationModal from './AuthenticationModals/AuthenticationModal'\r\n\r\nconst Header = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n     const { user, setUser } = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n  const toggle = () => setIsOpen(!isOpen);\r\n   const toggleModal = () => {\r\n     setModalIsOpen(!modalIsOpen);\r\n   };\r\n\r\n    const goToHomePage = () => {\r\n      history.push(\"/\");\r\n    };\r\n     const goToMyPage = () => {\r\n      // history.push(\"/mypage\");\r\n      console.log('Add mypage here');\r\n     };\r\n\r\n     const logout = async () => {\r\n       let res = await fetch(\"/auth/logout\");\r\n       setUser(null);\r\n       history.push(\"/\");\r\n     };\r\n    \r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand onClick={goToHomePage} className=\"pointer\">\r\n          Cat forum\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            {user === null ? (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className=\"pointer\"\r\n                    onClick={toggleModal}\r\n                  >\r\n                    Logga in\r\n                  </NavLink>\r\n                  <AuthenticationModal\r\n                    modalIsOpen={modalIsOpen}\r\n                    toggleModal={toggleModal}\r\n                    setModalIsOpen={setModalIsOpen}\r\n                  />\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem className=\"\">\r\n                  <NavLink\r\n                    className=\"pointer\"\r\n                    onClick={goToMyPage}\r\n                  >\r\n                    Min sida\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"\">\r\n                  <NavLink className=\"pointer\" onClick={logout}>\r\n                    Logga ut\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;","D:\\cat-forum\\frontend\\src\\components\\ThreadList.js",["79"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport {\r\n Button\r\n} from 'reactstrap';\r\nimport { SubjectContext } from '../contexts/SubjectContextProvider'\r\nimport {UserContext} from '../contexts/UserContextProvider'\r\nimport ThreadItem from './ThreadItem'\r\nimport CreateNewThreadModal from './CreateNewThreadModal'\r\n\r\nconst ThreadList = () =>{\r\n  const { chosenSubject } = useContext(SubjectContext);\r\n  const {user} = useContext(UserContext)\r\n  const [threads, setThreads] = useState(null);\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const fetchThreads = async () =>{\r\n    let result = await fetch('/rest/threads/' + chosenSubject.id)\r\n    result = await result.json();\r\n    console.log(result);\r\n    setThreads(result);\r\n  }\r\n\r\n  useEffect(() => {\r\n   fetchThreads()\r\n  }, [])\r\n\r\n  return(\r\n    <div>\r\n      {user ? <div><Button onClick={toggle}>Create new thread</Button>\r\n        <CreateNewThreadModal\r\n          toggle={toggle}\r\n          modal={modal}\r\n          setModal={setModal}\r\n      /></div> : ''}\r\n      {threads && threads.map((thread, i) =>{\r\n        return <ThreadItem thread={thread} key={i}/>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\nexport default ThreadList;","D:\\cat-forum\\frontend\\src\\components\\SubjectList.js",["80","81"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport SubjectItem from './SubjectItem'\r\nimport { SubjectContext} from '../contexts/SubjectContextProvider'\r\n\r\nconst SubjectList = () => {\r\n  const { fetchSubjects, subjects } = useContext(SubjectContext)\r\n\r\n  useEffect(() => {\r\n    fetchSubjects();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {subjects && subjects.map((subject, i) => {\r\n       return <SubjectItem subject={subject} key={i}/> \r\n      })}\r\n    </div>\r\n  )\r\n}\r\nexport default SubjectList;","D:\\cat-forum\\frontend\\src\\components\\ReplyItem.js",[],"D:\\cat-forum\\frontend\\src\\components\\ThreadItem.js",[],"D:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\AuthenticationModal.js",[],"D:\\cat-forum\\frontend\\src\\components\\SubjectItem.js",[],"D:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\LoginModal.js",["82"],"import React, { useState, useContext } from \"react\";\r\nimport { UserContext } from \"../../contexts/UserContextProvider\";\r\nimport { Button, ModalBody, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nconst LoginModal = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessageShown, setErrorMessageShown] = useState(false);\r\n  const { setUser, fetchUser } = useContext(UserContext);\r\n\r\n  const performLogin = async (e) => {\r\n    console.log('In login method in frontend');\r\n    e.preventDefault();\r\n\r\n    const credentials =\r\n     {email: email,\r\n      password: password\r\n    }\r\n    console.log(credentials);\r\n\r\n    await fetch(\"/auth/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n\r\n      fetchUser();\r\n      setErrorMessageShown(false);\r\n      props.setModalIsOpen(!props.modalIsOpen);\r\n    \r\n  };\r\n  return (\r\n    <div className=\"row mx-auto authentication-modals\">\r\n      <h2 className=\"text-center mt-4 tradeHub-orange font-weight-bold col-12\">\r\n        Logga in\r\n      </h2>\r\n      <ModalBody className=\"\">\r\n        <Form onSubmit={performLogin}>\r\n          <FormGroup className=\"col-xs-8 col-sm-12 col-md-12 col-lg-12 m-0\">\r\n            <Label\r\n              for=\"emailAddress\"\r\n              className=\"tradeHub-dark-grey font-weight-bold\"\r\n            >\r\n              Email\r\n            </Label>\r\n            <Input\r\n              required\r\n              className=\"light-grey-background tradeHub-input\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup className=\"col-xs-8 col-sm-12 col-md-12 col-lg-12 mt-2\">\r\n            <Label\r\n              for=\"password\"\r\n            >\r\n              Password\r\n            </Label>\r\n            <Input\r\n              required\r\n              className=\"light-grey-background tradeHub-input\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />{\" \"}\r\n          </FormGroup>\r\n          <FormGroup className=\"col-xs-8 col-sm-12 col-md-12 col-lg-12 mt-2\">\r\n            {errorMessageShown ? (\r\n              <div className=\"error-text mb-2 text-center font-weight-bold\">\r\n                Felaktigt användarnamn eller lösenord{\" \"}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Button className=\"tradeHub-button col-xs-8 col-sm-12 col-md-12 col-lg-12 font-weight-bold\">\r\n              Logga in\r\n            </Button>\r\n          </FormGroup>\r\n        </Form>\r\n        <div className=\"text-center m-4\">\r\n          <p className=\"font-italic mb-0\">Har du inte ett konto?</p>\r\n          <p className=\"font-italic\">\r\n            {\" \"}              \r\n            Skapa konto{\" \"}\r\n            <span className=\"text-primary click-text inline\">\r\n              <span onClick={() => props.setIsRegistered(props.isRegistered)}>här</span>\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </ModalBody>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n","D:\\cat-forum\\frontend\\src\\components\\AuthenticationModals\\RegisterModal.js",[],"D:\\cat-forum\\frontend\\src\\components\\CreateNewThreadModal.js",["83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":32,"nodeType":"91","messageId":"92","endLine":1,"endColumn":42},{"ruleId":"89","severity":1,"message":"93","line":1,"column":44,"nodeType":"91","messageId":"92","endLine":1,"endColumn":53},{"ruleId":"94","severity":1,"message":"95","line":18,"column":6,"nodeType":"96","endLine":18,"endColumn":8,"suggestions":"97"},{"ruleId":"89","severity":1,"message":"98","line":35,"column":12,"nodeType":"91","messageId":"92","endLine":35,"endColumn":15},{"ruleId":"94","severity":1,"message":"99","line":27,"column":6,"nodeType":"96","endLine":27,"endColumn":8,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"101","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"102","line":10,"column":6,"nodeType":"96","endLine":10,"endColumn":8,"suggestions":"103"},{"ruleId":"89","severity":1,"message":"104","line":9,"column":11,"nodeType":"91","messageId":"92","endLine":9,"endColumn":18},{"ruleId":"89","severity":1,"message":"105","line":8,"column":26,"nodeType":"91","messageId":"92","endLine":8,"endColumn":38},{"ruleId":"89","severity":1,"message":"106","line":35,"column":10,"nodeType":"91","messageId":"92","endLine":35,"endColumn":15},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchReplies'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchThreads'. Either include it or remove the dependency array.",["110"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchSubjects'. Either include it or remove the dependency array.",["111"],"'setUser' is assigned a value but never used.","'chosenThread' is assigned a value but never used.","'reply' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [fetchReplies]",{"range":"118","text":"119"},"Update the dependencies array to be: [fetchThreads]",{"range":"120","text":"121"},"Update the dependencies array to be: [fetchSubjects]",{"range":"122","text":"123"},[515,517],"[fetchReplies]",[844,846],"[fetchThreads]",[320,322],"[fetchSubjects]"]